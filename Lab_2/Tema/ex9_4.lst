     1                                  ; (2*d+e)/a 
     2                                  ; a,b,c,d-byte, e,f,g,h-word
     3                                  
     4                                  bits 32 
     5                                  
     6                                  global start        
     7                                  
     8                                  extern exit, printf              
     9                                  import exit msvcrt.dll    
    10                                  import printf msvcrt.dll    
    11                                      
    12                                  
    13                                  segment data use32 class=data
    14 00000000 04                          a db 4
    15 00000001 06                          b db 6
    16 00000002 02                          c db 2
    17 00000003 04                          d db 4
    18                                      
    19 00000004 0500                        e dw 5
    20 00000006 0800                        f dw 8
    21 00000008 0600                        g dw 6
    22 0000000A 0300                        h dw 3
    23                                      
    24 0000000C 436174756C20657374-         print_frm db "Catul este: %d", 0
    24 00000015 653A20256400       
    25                                    
    26                                  segment code use32 class=code
    27                                  start:
    28                                  
    29 00000000 31C0                        xor eax, eax
    30 00000002 31DB                        xor ebx, ebx
    31 00000004 31C9                        xor ecx, ecx
    32 00000006 31D2                        xor edx, edx
    33                                      
    34 00000008 B002                        mov al, 2
    35 0000000A F625[03000000]              mul byte [d]  ; ax = 2 * d
    36 00000010 660305[04000000]            add ax, [e]
    37                                      
    38 00000017 8A1D[00000000]              mov bl, [a]
    39                                      
    40 0000001D F6FB                        idiv bl  ; al = ax / bl
    41                                      
    42 0000001F 30E4                        xor ah, ah
    43 00000021 6698                        cbw
    44 00000023 98                          cwde
    45                                      
    46 00000024 50                          push eax
    47 00000025 68[0C000000]                push print_frm
    48 0000002A FF15[00000000]              call [printf]
    49 00000030 83C408                      add esp, 2 * 4
    50                                      
    51                                    
    52 00000033 6A00                        push    dword 0      ; push the parameter for exit onto the stack
    53 00000035 FF15[00000000]              call    [exit]       ; call exit to terminate the program
