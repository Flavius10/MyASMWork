     1                                  ;Dandu-se 4 octeti, sa se obtina in AX suma numerelor intregi reprezentate de bitii 4-6 ai celor 4 octeti.
     2                                  
     3                                  bits 32 
     4                                  global start        
     5                                  
     6                                  extern exit, printf               
     7                                  import exit msvcrt.dll    
     8                                  import printf msvcrt.dll    
     9                                  segment data use32 class=data
    10                                  
    11 00000000 9B                          A db 10011011b
    12 00000001 4A                          B db 01001010b
    13 00000002 95                          C db 10010101b
    14 00000003 A6                          D db 10100110b
    15                                      
    16 00000004 52657A756C74617475-         print_frm db "Rezultatul este: %u", 0
    16 0000000D 6C20657374653A2025-
    16 00000016 7500               
    17                                      
    18                                  segment code use32 class=code
    19                                  start:
    20                                     
    21 00000000 31C0                        xor eax, eax
    22 00000002 31DB                        xor ebx, ebx
    23 00000004 31C9                        xor ecx, ecx
    24 00000006 31D2                        xor edx, edx
    25                                      
    26 00000008 A0[00000000]                mov al, [A]
    27 0000000D 2470                        and al, 01110000b
    28 0000000F C0E804                      shr al, 4
    29                                      
    30 00000012 6601C2                      add dx, ax
    31                                      
    32 00000015 A0[01000000]                mov al, [B]
    33 0000001A 2470                        and al, 01110000b
    34 0000001C C0E804                      shr al, 4
    35                                      
    36 0000001F 6601C2                      add dx, ax
    37                                      
    38 00000022 A0[02000000]                mov al, [C]
    39 00000027 2470                        and al, 01110000b
    40 00000029 C0E804                      shr al, 4
    41                                      
    42 0000002C 6601C2                      add dx, ax
    43                                      
    44 0000002F A0[03000000]                mov al, [D]
    45 00000034 2470                        and al, 01110000b
    46 00000036 C0E804                      shr al, 4
    47                                      
    48 00000039 6601C2                      add dx, ax
    49 0000003C 6689D0                      mov ax, dx
    50                                      
    51 0000003F 50                          push eax
    52 00000040 68[04000000]                push print_frm
    53 00000045 FF15[00000000]              call [printf]
    54 0000004B 83C408                      add esp, 2 * 4
    55                                      
    56                                     
    57 0000004E 6A00                        push    dword 0      ; push the parameter for exit onto the stack
    58 00000050 FF15[00000000]              call    [exit]       ; call exit to terminate the program
